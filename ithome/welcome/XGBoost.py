# -*- coding: utf-8 -*-
# -*- coding: utf-8 -*-
"""法律資訊_機率輸出

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XNkiituAcyPjDb99e0SFnEk7BjR3Xvbx
"""

import joblib
import numpy as np

## 使用者輸入產生input x的一個array 取名為x
## 交給你們連到網頁了



## 導入模型 59個

## 是否為凶宅 by using XGB

def house_predict_proba(money, y_money):
  money = money[0, 0]
  print(money)
  if y_money == 0:
    return '解除契約'

  #0.3~0.4
  if y_money == 1:
    return (money*0.3, money*0.4)
  
  #0.25~0.3
  if y_money == 2:
    return (money*0.25, money*0.3)
  
  #0.2~0.25
  if y_money == 3:
    return (money*0.2, money*0.25)
   
  #0.15~0.2
  if y_money == 4:
    return (money*0.15, money*0.2)
    
  #0.1~0.15
  if y_money == 5:
    return (money*0.1, money*0.15)

  #0.05~0.1
  if y_money == 6:
    return (money*0.05, money*0.1)

def predict_proba(x_input, money):
    import os
    
    output = {}
    xgb = joblib.load(os.path.join(os.getcwd(),"bad_house"))
    output['bad_house'] =  np.around(xgb.predict_proba(x_input)*100,1)
    x_input = x_input.astype(float)
    
    ## 原房價
    money = money.astype(float)
    
    ## 房價減損



    
    #for 出賣人
        ##354
    xgb = joblib.load(os.path.join(os.getcwd(),r"final_xgbs_出/民法第354條瑕疵擔保_final_出"))
    output['s354'] =  np.around(xgb.predict_proba(x_input,3)* 100,1) 
    
    ##179
    xgb = joblib.load(r"final_xgbs_出/民法第179條不當得利_final_出")
    output['s179'] =  np.around(xgb.predict_proba(x_input,3)* 100,1) 
    
    
    ##92
    xgb = joblib.load(r"final_xgbs_出/民法第92條詐欺（第三人或出賣人）_final_出")
    output['s92'] =  np.around(xgb.predict_proba(x_input,3)* 100,1) 
    
    ##184_1前
    xgb = joblib.load(r"final_xgbs_出/民法侵權行為第184條第1項前段_final_出")
    output['s184'] =  np.around(xgb.predict_proba(x_input,3)* 100,1) 
    
    ##184_1後
    xgb = joblib.load(r"final_xgbs_出/侵權行為第184條第1項後段_final_出")
    output['s184_1'] =  np.around(xgb.predict_proba(x_input)*100,1)
    
    
    ##184_2
    xgb = joblib.load(r"final_xgbs_出/侵權行為第184條第2項_final_出")
    output['s184_2'] =  np.around(xgb.predict_proba(x_input)*100,1)
    
    
    ##227_1
    xgb = joblib.load(r"final_xgbs_出/不完全給付227第1項_final_出")
    output['s227'] =  np.around(xgb.predict_proba(x_input) * 100,1)
    
    
    ##227_2
    xgb = joblib.load(r"final_xgbs_出/不完全給付227第2項_final_出")
    output['s227_2'] =  np.around(xgb.predict_proba(x_input) * 100,1)
    
    
    ##359減少
    xgb = joblib.load(r"final_xgbs_出/民法359_減少價金_final_出")
    output['s359m'] =  np.around(xgb.predict_proba(x_input)*100,1)
    
    
    ##359解約
    xgb = joblib.load(r"final_xgbs_出/民法第359_解約_final_出")
    output['s359'] =  np.round(xgb.predict_proba(x_input)* 100,1) 
    
    
    ##360
    xgb = joblib.load(r"final_xgbs_出/民法360_損害賠償_final_出")
    output['s360'] =  np.around(xgb.predict_proba(x_input)*100,1)
    
    
    ##259
    xgb = joblib.load(r"final_xgbs_出/民法259(回復原狀=返還價金)_final_出")
    output['s259'] =  np.around(xgb.predict_proba(x_input)*100,1)
    
    
    ##260
    xgb = joblib.load(r"final_xgbs_出/民法260損害賠償_final_出")
    output['s260'] =  np.around(xgb.predict_proba(x_input)*100,1)
    
    
    ##227之1
    xgb = joblib.load(r"final_xgbs_出/不完全給付227之1_final_出")
    if(xgb.predict_proba(x_input).shape == (1,2)):
        ks = xgb.predict_proba(x_input) 
        ks = np.insert(ks,1,0.0)
        ks = ks.reshape(1,3)
    output['s227_1'] =  np.around(ks*100,1)

    #for 仲介
    
    ##354
    xgb = joblib.load(r"final_xgbs_仲/民法第354條瑕疵擔保_final_仲")
    output['a354'] =  np.around(xgb.predict_proba(x_input)*100,1)
    
    
    ##179
    xgb = joblib.load(r"final_xgbs_仲/民法第179條不當得利_final_仲")
    if(xgb.predict_proba(x_input).shape == (1,2)):
        ks = xgb.predict_proba(x_input) 
        ks = np.insert(ks,1,0.0)
        ks = ks.reshape(1,3)
    
    output['a179'] =  np.around(ks*100,1)
    
    
    ##92
    xgb = joblib.load(r"final_xgbs_仲/民法第92條詐欺（第三人或出賣人）_final_仲")
    if(xgb.predict_proba(x_input).shape == (1,2)):
        ks = xgb.predict_proba(x_input) 
        ks = np.insert(ks,1,0.0)
        ks = ks.reshape(1,3)
    
    output['a92'] = np.around(ks*100,1)
    
    
    ##184_1前
    xgb = joblib.load(r"final_xgbs_仲/民法侵權行為第184條第1項前段_final_仲")
    output['a184'] =  np.around(xgb.predict_proba(x_input)*100,1)
    
    
    ##184_1後
    xgb = joblib.load(r"final_xgbs_仲/侵權行為第184條第1項後段_final_仲")
    if(xgb.predict_proba(x_input).shape == (1,2)):
        ks = xgb.predict_proba(x_input) 
        ks = np.insert(ks,1,0.0)
        ks = ks.reshape(1,3)
    output['a184_1'] = np.around(ks*100,1)
    
    
    ##184_2
    xgb = joblib.load(r"final_xgbs_仲/侵權行為第184條第2項_final_仲")
    if(xgb.predict_proba(x_input).shape == (1,2)):
        ks = xgb.predict_proba(x_input) 
        ks = np.insert(ks,1,0.0)
        ks = ks.reshape(1,3)
    
    output['a184_2'] =  np.around(ks*100,1)
    
    
    ##188
    xgb = joblib.load(r"final_xgbs_仲/侵權行為第188條_final_仲")
    if(xgb.predict_proba(x_input).shape == (1,2)):
        ks = xgb.predict_proba(x_input) 
        ks = np.insert(ks,1,0.0)
        ks = ks.reshape(1,3)
    
    output['a188'] =  np.around(ks*100,1)
    
    
    ##544
    xgb = joblib.load(r"final_xgbs_仲/違反委任契約第544條_final_仲")
    output['a544'] =  np.around(xgb.predict_proba(x_input)*100,1)
    
    
    ##26
    xgb = joblib.load(r"final_xgbs_仲/違反不動產經紀業條例第26條_final_仲")
    output['a26'] =  np.around(xgb.predict_proba(x_input)*100,1)
    
    ##571
    xgb = joblib.load(r"final_xgbs_仲/民法第571條_final_仲")
    if(xgb.predict_proba(x_input).shape == (1,2)):
        ks = xgb.predict_proba(x_input) 
        ks = np.insert(ks,1,0.0)
        ks = ks.reshape(1,3)
    output['a571'] =  np.around(ks*100,1)
    
    
    ##227_1
    xgb = joblib.load(r"final_xgbs_仲/不完全給付227第1項_final_仲")
    
    output['a227_1'] = np.around(xgb.predict_proba(x_input)*100,1)
    
    
    ##227_2
    xgb = joblib.load(r"final_xgbs_仲/不完全給付227第2項_final_仲")
    output['a227_2'] =  np.around(xgb.predict_proba(x_input)*100,1)
    
    
    ##227之1
    xgb = joblib.load(r"final_xgbs_仲/不完全給付227之1_final_仲")
    if(xgb.predict_proba(x_input).shape == (1,2)):
        ks = xgb.predict_proba(x_input) 
        ks = np.insert(ks,1,0.0)
        ks = ks.reshape(1,3)
    output['a2271'] =  np.around(ks*100,1)
    
    
    
    ##359減少
    xgb = joblib.load(r"final_xgbs_仲/民法359_減少價金_final_仲")
    output['a359m'] =  np.around(xgb.predict_proba(x_input)*100,1)
    
    
    ##359解約
    xgb = joblib.load(r"final_xgbs_仲/民法第359_解約_final_仲")
    if(xgb.predict_proba(x_input).shape == (1,2)):
        ks = xgb.predict_proba(x_input) 
        ks = np.insert(ks,1,0.0)
        ks = ks.reshape(1,3)
    output['a359'] =  np.around(ks*100,1)
    
    
    ##360
    xgb = joblib.load(r"final_xgbs_仲/民法360_損害賠償_final_仲")
    if(xgb.predict_proba(x_input).shape == (1,2)):
        ks = xgb.predict_proba(x_input) 
        ks = np.insert(ks,1,0.0)
        ks = ks.reshape(1,3)
    output['a360'] =  np.around(ks*100,1)
    
    
    ##259
    xgb = joblib.load(r"final_xgbs_仲/民法259(回復原狀=返還價金)_final_仲")
    output['a259'] =  np.around(xgb.predict_proba(x_input)*100,1)
    
    
    for key, value in output.items():
        output[key] = output[key][0][1]
        
    xgb = joblib.load("房價xgb")
    y_money = np.argmax(xgb.predict_proba(x_input))

    house_price = house_predict_proba(money, y_money)
    
    if y_money == 0:
        output['h_price'] = house_price

    output['h_price_min'] = house_price[0]
    output['h_price_max'] = house_price[1]
    
    if output['bad_house'] > 50:
        output['is_bad_house'] = '是'
    else:
        for key, value in output.items():
            output[key] = 0;
        output['is_bad_house'] = '否'
    
    return output